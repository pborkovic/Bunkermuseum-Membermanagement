services:
  app-dev:
    build:
      context: .
      dockerfile: nginx/Dockerfile.dev
      target: development
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - SPRING_DEVTOOLS_LIVERELOAD_ENABLED=true
      - VAADIN_PRODUCTION_MODE=false
      - VAADIN_FRONTEND_HOTDEPLOY=true
      - VAADIN_SKIP_NODE_MODULES_CLEANUP=true
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-dev:5432/bunkermuseum_dev
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_USERNAME=bunkermuseum_dev
      - SPRING_DATASOURCE_PASSWORD=bunkermuseum_dev_password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_FORMAT_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_GENERATE_STATISTICS=true
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
      - SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE=2
      - SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT=30000
      - SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT=600000
      - SPRING_DATASOURCE_HIKARI_MAX_LIFETIME=1800000
      - SPRING_REDIS_HOST=redis-dev
      - SPRING_REDIS_PORT=6379
      - MINIO_ENDPOINT=http://minio-dev:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_BUCKET_NAME=bunkermuseum-dev-files
    volumes:
      # Mount Java source code for hot reload
      - ./src/main/java:/app/src/main/java:delegated
      - ./src/main/resources:/app/src/main/resources:delegated
      - ./src/test:/app/src/test:delegated

      # Mount frontend source code for hot reload
      - ./src/main/frontend/views:/app/src/main/frontend/views:delegated
      - ./src/main/frontend/themes:/app/src/main/frontend/themes:delegated
      - ./src/main/frontend/components:/app/src/main/frontend/components:delegated
      - ./src/main/frontend/contexts:/app/src/main/frontend/contexts:delegated
      - ./src/main/frontend/hooks:/app/src/main/frontend/hooks:delegated
      - ./src/main/frontend/utils:/app/src/main/frontend/utils:delegated

      # Configuration files (allow npm to update package-lock.json)
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./vite.config.ts:/app/vite.config.ts:ro
      - ./vite.generated.ts:/app/vite.generated.ts:ro
      - ./pom.xml:/app/pom.xml:ro

      # Cache volumes for better performance
      - maven_cache:/root/.m2
      - vaadin_cache:/root/.vaadin
      # Let Vaadin manage node_modules directly without volume mounting
      # - node_modules_cache:/app/node_modules
    restart: unless-stopped
    depends_on:
      - postgres-dev
      - redis-dev
      - minio-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    dns:
      - 8.8.8.8
      - 8.8.4.4
    command: ["sh", "-c", "./mvnw dependency:go-offline -B -q || true && ./mvnw spring-boot:run -Dspring-boot.run.jvmArguments='-Dvaadin.frontend.hotdeploy=true'"]

  postgres-dev:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=bunkermuseum_dev
      - POSTGRES_USER=bunkermuseum_dev
      - POSTGRES_PASSWORD=bunkermuseum_dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bunkermuseum_dev -d bunkermuseum_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis-dev:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  minio-dev:
    image: minio/minio:latest
    ports:
      - "9010:9000"
      - "9011:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio_dev_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 60s

volumes:
  maven_cache:
  vaadin_cache:
  postgres_dev_data:
  redis_dev_data:
  minio_dev_data:

networks:
  default:
    name: bunkermuseum-dev-network